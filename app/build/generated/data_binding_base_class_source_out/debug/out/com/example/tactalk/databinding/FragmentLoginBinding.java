// Generated by view binder compiler. Do not edit!
package com.example.tactalk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.tactalk.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Appname;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final View contentView;

  @NonNull
  public final EditText edtEmail;

  @NonNull
  public final EditText edtPassword;

  @NonNull
  public final TextView goRegister;

  @NonNull
  public final ImageView imageView2;

  private FragmentLoginBinding(@NonNull ConstraintLayout rootView, @NonNull TextView Appname,
      @NonNull Button btnLogin, @NonNull ConstraintLayout container, @NonNull View contentView,
      @NonNull EditText edtEmail, @NonNull EditText edtPassword, @NonNull TextView goRegister,
      @NonNull ImageView imageView2) {
    this.rootView = rootView;
    this.Appname = Appname;
    this.btnLogin = btnLogin;
    this.container = container;
    this.contentView = contentView;
    this.edtEmail = edtEmail;
    this.edtPassword = edtPassword;
    this.goRegister = goRegister;
    this.imageView2 = imageView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Appname;
      TextView Appname = rootView.findViewById(id);
      if (Appname == null) {
        break missingId;
      }

      id = R.id.btn_login;
      Button btnLogin = rootView.findViewById(id);
      if (btnLogin == null) {
        break missingId;
      }

      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.content_view;
      View contentView = rootView.findViewById(id);
      if (contentView == null) {
        break missingId;
      }

      id = R.id.edt_email;
      EditText edtEmail = rootView.findViewById(id);
      if (edtEmail == null) {
        break missingId;
      }

      id = R.id.edt_password;
      EditText edtPassword = rootView.findViewById(id);
      if (edtPassword == null) {
        break missingId;
      }

      id = R.id.goRegister;
      TextView goRegister = rootView.findViewById(id);
      if (goRegister == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = rootView.findViewById(id);
      if (imageView2 == null) {
        break missingId;
      }

      return new FragmentLoginBinding((ConstraintLayout) rootView, Appname, btnLogin, container,
          contentView, edtEmail, edtPassword, goRegister, imageView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
