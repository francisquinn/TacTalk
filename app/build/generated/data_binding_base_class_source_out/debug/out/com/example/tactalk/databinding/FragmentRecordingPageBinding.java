// Generated by data binding compiler. Do not edit!
package com.example.tactalk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Chronometer;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.tactalk.R;
import com.example.tactalk.recording.RecordingViewModel;
import com.visualizer.amplitude.AudioRecordView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentRecordingPageBinding extends ViewDataBinding {
  @NonNull
  public final AudioRecordView audioRecordView;

  @NonNull
  public final Button endHalf;

  @NonNull
  public final TextView firsthalf;

  @NonNull
  public final TextView homeGoals;

  @NonNull
  public final TextView homePoints;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final Chronometer matchTime;

  @NonNull
  public final Button pause;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textView7;

  @Bindable
  protected RecordingViewModel mRecordViewModel;

  protected FragmentRecordingPageBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AudioRecordView audioRecordView, Button endHalf, TextView firsthalf, TextView homeGoals,
      TextView homePoints, ImageView logo, Chronometer matchTime, Button pause, TextView textView6,
      TextView textView7) {
    super(_bindingComponent, _root, _localFieldCount);
    this.audioRecordView = audioRecordView;
    this.endHalf = endHalf;
    this.firsthalf = firsthalf;
    this.homeGoals = homeGoals;
    this.homePoints = homePoints;
    this.logo = logo;
    this.matchTime = matchTime;
    this.pause = pause;
    this.textView6 = textView6;
    this.textView7 = textView7;
  }

  public abstract void setRecordViewModel(@Nullable RecordingViewModel recordViewModel);

  @Nullable
  public RecordingViewModel getRecordViewModel() {
    return mRecordViewModel;
  }

  @NonNull
  public static FragmentRecordingPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_recording_page, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRecordingPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentRecordingPageBinding>inflateInternal(inflater, R.layout.fragment_recording_page, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentRecordingPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_recording_page, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRecordingPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentRecordingPageBinding>inflateInternal(inflater, R.layout.fragment_recording_page, null, false, component);
  }

  public static FragmentRecordingPageBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentRecordingPageBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentRecordingPageBinding)bind(component, view, R.layout.fragment_recording_page);
  }
}
