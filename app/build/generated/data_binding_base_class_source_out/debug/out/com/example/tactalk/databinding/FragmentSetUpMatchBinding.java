// Generated by view binder compiler. Do not edit!
package com.example.tactalk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.tactalk.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSetUpMatchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText MatchLocation;

  @NonNull
  public final EditText MatchOpposition;

  @NonNull
  public final EditText SetMatchDate;

  @NonNull
  public final TextView SetUpMatch;

  @NonNull
  public final Button doneButton;

  @NonNull
  public final ConstraintLayout frameLayout2;

  private FragmentSetUpMatchBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText MatchLocation, @NonNull EditText MatchOpposition,
      @NonNull EditText SetMatchDate, @NonNull TextView SetUpMatch, @NonNull Button doneButton,
      @NonNull ConstraintLayout frameLayout2) {
    this.rootView = rootView;
    this.MatchLocation = MatchLocation;
    this.MatchOpposition = MatchOpposition;
    this.SetMatchDate = SetMatchDate;
    this.SetUpMatch = SetUpMatch;
    this.doneButton = doneButton;
    this.frameLayout2 = frameLayout2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSetUpMatchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSetUpMatchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_set_up_match, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSetUpMatchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.MatchLocation;
      EditText MatchLocation = rootView.findViewById(id);
      if (MatchLocation == null) {
        break missingId;
      }

      id = R.id.MatchOpposition;
      EditText MatchOpposition = rootView.findViewById(id);
      if (MatchOpposition == null) {
        break missingId;
      }

      id = R.id.SetMatchDate;
      EditText SetMatchDate = rootView.findViewById(id);
      if (SetMatchDate == null) {
        break missingId;
      }

      id = R.id.SetUpMatch;
      TextView SetUpMatch = rootView.findViewById(id);
      if (SetUpMatch == null) {
        break missingId;
      }

      id = R.id.doneButton;
      Button doneButton = rootView.findViewById(id);
      if (doneButton == null) {
        break missingId;
      }

      ConstraintLayout frameLayout2 = (ConstraintLayout) rootView;

      return new FragmentSetUpMatchBinding((ConstraintLayout) rootView, MatchLocation,
          MatchOpposition, SetMatchDate, SetUpMatch, doneButton, frameLayout2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
